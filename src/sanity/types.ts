/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type SanityImagePaletteSwatch = {
  _type: 'sanity.imagePaletteSwatch';
  background?: string;
  foreground?: string;
  population?: number;
  title?: string;
};

export type SanityImagePalette = {
  _type: 'sanity.imagePalette';
  darkMuted?: SanityImagePaletteSwatch;
  lightVibrant?: SanityImagePaletteSwatch;
  darkVibrant?: SanityImagePaletteSwatch;
  vibrant?: SanityImagePaletteSwatch;
  dominant?: SanityImagePaletteSwatch;
  lightMuted?: SanityImagePaletteSwatch;
  muted?: SanityImagePaletteSwatch;
};

export type SanityImageDimensions = {
  _type: 'sanity.imageDimensions';
  height?: number;
  width?: number;
  aspectRatio?: number;
};

export type SanityImageHotspot = {
  _type: 'sanity.imageHotspot';
  x?: number;
  y?: number;
  height?: number;
  width?: number;
};

export type SanityImageCrop = {
  _type: 'sanity.imageCrop';
  top?: number;
  bottom?: number;
  left?: number;
  right?: number;
};

export type SanityFileAsset = {
  _id: string;
  _type: 'sanity.fileAsset';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  source?: SanityAssetSourceData;
};

export type SanityImageAsset = {
  _id: string;
  _type: 'sanity.imageAsset';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  metadata?: SanityImageMetadata;
  source?: SanityAssetSourceData;
};

export type SanityImageMetadata = {
  _type: 'sanity.imageMetadata';
  location?: Geopoint;
  dimensions?: SanityImageDimensions;
  palette?: SanityImagePalette;
  lqip?: string;
  blurHash?: string;
  hasAlpha?: boolean;
  isOpaque?: boolean;
};

export type Geopoint = {
  _type: 'geopoint';
  lat?: number;
  lng?: number;
  alt?: number;
};

export type Slug = {
  _type: 'slug';
  current?: string;
  source?: string;
};

export type SanityAssetSourceData = {
  _type: 'sanity.assetSourceData';
  name?: string;
  id?: string;
  url?: string;
};

export type Student_coordinators = {
  _id: string;
  _type: 'student_coordinators';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  profiles?: Array<{
    content?: Array<string>;
    imageURL?: string;
    title?: string;
    _key: string;
  }>;
};

export type Finance = {
  _id: string;
  _type: 'finance';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  profiles?: Array<{
    content?: Array<string>;
    imageURL?: string;
    title?: string;
    _key: string;
  }>;
};

export type Cgc = {
  _id: string;
  _type: 'cgc';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  profiles?: Array<{
    content?: Array<string>;
    imageURL?: string;
    title?: string;
    _key: string;
  }>;
};

export type BuildingAndWorks = {
  _id: string;
  _type: 'buildingAndWorks';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  profiles?: Array<{
    content?: Array<string>;
    imageURL?: string;
    title?: string;
    _key: string;
  }>;
};

export type ProgramsType = {
  _id: string;
  _type: 'programsType';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  image?: string;
  title?: string;
  description?: string;
  link?: string;
};

export type ProgramCards = {
  _id: string;
  _type: 'programCards';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  image?: string;
  link?: string;
  Header1?: string;
  Header2?: string;
};

export type MainCarouselImage = {
  _id: string;
  _type: 'mainCarouselImage';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  url?: string;
  caption?: string;
  link?: string;
};

export type Gallery = {
  _id: string;
  _type: 'gallery';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  url?: string;
  caption?: string;
};

export type Event = {
  _id: string;
  _type: 'event';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  id?: string;
  href?: string;
  text?: string;
  timestamp?: string;
  allImage?: Array<string>;
  details?: {
    startDate?: string;
    endDate?: string;
    ticketPrice?: string;
  };
  venue?: {
    place?: string;
    street?: string;
    city?: string;
  };
  organiser?: {
    name?: string;
    designation?: string;
    contact?: string;
  };
  aboutEvent?: string;
};

export type ContactData = {
  _id: string;
  _type: 'contactData';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  generalQueries?: Array<{
    _ref: string;
    _type: 'reference';
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: 'contact';
  }>;
  hostelRelatedQueries?: Array<{
    _ref: string;
    _type: 'reference';
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: 'contact';
  }>;
  academicQueries?: Array<{
    _ref: string;
    _type: 'reference';
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: 'contact';
  }>;
  careerGuidanceCell?: Array<{
    _ref: string;
    _type: 'reference';
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: 'contact';
  }>;
  feeRelatedQueries?: Array<{
    _ref: string;
    _type: 'reference';
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: 'contact';
  }>;
  scholarshipLoansQueries?: Array<{
    _ref: string;
    _type: 'reference';
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: 'contact';
  }>;
};

export type Contact = {
  _id: string;
  _type: 'contact';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: string;
  designation?: string;
  contactNumber?: string;
  category?: {
    _ref: string;
    _type: 'reference';
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: 'contactCategory';
  };
};

export type ContactCategory = {
  _id: string;
  _type: 'contactCategory';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  category?: string;
};

export type AnnualReport = {
  _id: string;
  _type: 'annualReport';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  displayText?: string;
  issueUrl?: string;
  previewImg?: string;
};

export type Tender = {
  _id: string;
  _type: 'tender';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  cancelled?: boolean;
  corrections?: Array<{
    title?: string;
    link?: string;
    _key: string;
  }>;
  documents?: Array<{
    title?: string;
    link?: string;
    _key: string;
  }>;
  link?: string;
  publishDate?: string;
  submissionDeadline?: string;
  updatedAt?: number;
};

export type Nirf = {
  _id: string;
  _type: 'nirf';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  year?: number;
  overallReport?: string;
  engineeringReport?: string;
};

export type Club = {
  _id: string;
  _type: 'club';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?:
    | 'Velocity'
    | 'Iridescence'
    | 'Return 0'
    | 'BlocSoc'
    | 'GDSC IIIT Dharwad'
    | 'E cell'
    | 'IEEE SB & CS'
    | 'Inquizitive'
    | 'IRIS'
    | 'DSAI Society'
    | 'Quantum Computing Club'
    | 'Techniosys'
    | 'Zeitgeist'
    | '440 Hz'
    | 'Dance Club'
    | 'Prabodhini'
    | 'Mosaic Club'
    | 'In Motion'
    | 'LimeLight';
  aboutText?: string;
  members?: Array<{
    name?: string;
    position?: string;
    _key: string;
  }>;
  imagePath?: string;
  isTechnical?: boolean;
  instagram?: string;
  linkedin?: string;
  gmail?: string;
  gmail2?: string;
  website?: string;
  github?: string;
  twitter?: string;
  linktree?: string;
};

export type Issues = {
  _id: string;
  _type: 'issues';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  issueUrl?: string;
  id?: number;
  displayText?: string;
  previewImg?: string;
};

export type Team = {
  _id: string;
  _type: 'team';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  teamId?: number;
  teamName?: string;
  members?: Array<{
    _ref: string;
    _type: 'reference';
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: 'member';
  }>;
};

export type FacultyAdvisor = {
  _id: string;
  _type: 'facultyAdvisor';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  id?: number;
  name?: string;
  role?: string;
};

export type Member = {
  _id: string;
  _type: 'member';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  id?: number;
  name?: string;
  role?: string;
};

export type Job = {
  _id: string;
  _type: 'job';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  category?: 'faculty' | 'staff' | 'others';
  details?: string;
  lastDate?: string;
  generalInstructions?: string;
  application?: string;
  extraInfo?: Array<{
    text?: string;
    link?: string;
    _key: string;
  }>;
};

export type Credit = {
  _id: string;
  _type: 'Credit';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  id?: string;
  Degree?: 'BTech' | 'MTech' | 'PhD';
  branch?: 'CSE' | 'ECE' | 'DSAI';
  courses?: Array<{
    code?: string;
    title?: string;
    credit?: string;
    preReq?: string;
    _type: 'course';
    _key: string;
  }>;
};

export type DsaiDetail = {
  _id: string;
  _type: 'dsaiDetail';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  course?: string;
  credits?: string;
};

export type EceDetail = {
  _id: string;
  _type: 'eceDetail';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  course?: string;
  credits?: string;
};

export type CseDetail = {
  _id: string;
  _type: 'cseDetail';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  course?: string;
  credits?: string;
};

export type About = {
  _id: string;
  _type: 'about';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  aboutText?: string;
  profiles?: Array<{
    title?: string;
    content?: Array<string>;
    imageURL?: string;
    _key: string;
  }>;
  briefProfile?: string;
  vision?: string;
  image_prof?: {
    name?: string;
    imageURL?: string;
  };
  mission?: Array<{
    missionText?: string;
    _key: string;
  }>;
  coreValues?: Array<{
    id?: string;
    text?: string;
    _key: string;
  }>;
  href?: string;
  directorMessage?: Array<{
    heading?: string;
    text1?: string;
    text2?: string;
    text3?: string;
    _key: string;
  }>;
};

export type DescriptionStructure = {
  _id: string;
  _type: 'descriptionStructure';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  id?: number;
  heading?: string;
  description?: string;
};

export type SeatStructure = {
  _id: string;
  _type: 'seatStructure';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  instituteCode?: number;
  instituteName?: string;
  programs?: Array<{
    code?: number;
    name?: string;
    seatPoolQuota?: Array<{
      name?: string;
      seatPoolGender?: Array<{
        name?: string;
        open?: number;
        open_pwd?: number;
        gen_ews?: number;
        gen_ews_pwd?: number;
        sc?: number;
        sc_pwd?: number;
        st?: number;
        st_pwd?: number;
        obc_ncl?: number;
        obc_ncl_pwd?: number;
        total?: number;
        _key: string;
      }>;
      seatCapacity?: number;
      femaleSupernumerary?: number;
      _key: string;
    }>;
    _key: string;
  }>;
  total?: Array<{
    id?: string;
    qty?: number;
    _key: string;
  }>;
};

export type LinksStructure = {
  _id: string;
  _type: 'linksStructure';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  id?: number;
  type?: string;
  links?: Array<{
    link?: string;
    displayText?: string;
    _key: string;
  }>;
};

export type Announcement = {
  _id: string;
  _type: 'announcement';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  text?: string;
  link?: string;
  new?: boolean;
  date?: string;
  year?: string;
  month?: string;
};

export type FormerBoardOfGovernor = {
  _id: string;
  _type: 'formerBoardOfGovernor';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  profiles?: Array<{
    title?: string;
    content?: Array<string>;
    imageURL?: string;
    _key: string;
  }>;
};

export type BoardOfGovernor = {
  _id: string;
  _type: 'boardOfGovernor';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  profiles?: Array<{
    title?: string;
    content?: Array<string>;
    imageURL?: string;
    _key: string;
  }>;
};

export type Visitor = {
  _id: string;
  _type: 'visitor';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  profiles?: Array<{
    title?: string;
    content?: Array<string>;
    imageURL?: string;
    _key: string;
  }>;
};

export type FormerDirector = {
  _id: string;
  _type: 'formerDirector';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  profiles?: Array<{
    title?: string;
    content?: Array<string>;
    imageURL?: string;
    _key: string;
  }>;
};

export type ChairPerson = {
  _id: string;
  _type: 'chairPerson';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  profiles?: Array<{
    title?: string;
    content?: Array<string>;
    imageURL?: string;
    _key: string;
  }>;
};

export type Staff = {
  _id: string;
  _type: 'staff';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  profiles?: Array<{
    title?: string;
    content?: Array<string>;
    imageURL?: string;
    _key: string;
  }>;
};

export type Senate = {
  _id: string;
  _type: 'senate';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  profiles?: Array<{
    title?: string;
    content?: Array<string>;
    imageURL?: string;
    _key: string;
  }>;
};

export type Faculty = {
  _id: string;
  _type: 'faculty';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  facultyId?: string;
  content?: {
    head?: {
      name?: string;
      profile_pdf?: string;
    };
    card?: {
      photo?: string;
      PhD?: string;
      designation?: string;
      department?: string;
      mail_id?: string;
      cabin_number?: string;
      position?: Array<string>;
    };
    body?: {
      profile_text?: string;
      interest_areas?: Array<string>;
    };
  };
};

export type KrcDataTelFull = {
  _id: string;
  _type: 'krcDataTelFull';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  heading?: string;
  card?: Array<{
    title?: string;
    description?: string;
    accessInfo?: string;
    buttonText?: string;
    link?: string;
    _key: string;
  }>;
};

export type KrcDataTel = {
  _id: string;
  _type: 'krcDataTel';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  description?: string;
  accessInfo?: string;
  buttonText?: string;
  link?: string;
};

export type KrcData = {
  _id: string;
  _type: 'krcData';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  description?: string;
  accessInfo?: string;
  buttonText?: string;
  link?: string;
};

export type Facility = {
  _id: string;
  _type: 'facility';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  blockName?: string;
  items?: Array<string>;
  imageUrl?: string;
};

export type CampusData = {
  _id: string;
  _type: 'campusData';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  href?: string;
  imageUrl?: string;
};

export type Research_advertisement = {
  _id: string;
  _type: 'research_advertisement';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  time?: string;
  lastDate?: string;
  generalInstructions?: string;
  applicationForm?: string;
};

export type ResearchProfiles = {
  _id: string;
  _type: 'researchProfiles';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  profiles?: Array<{
    title?: string;
    content?: Array<string>;
    imageURL?: string;
    _key: string;
  }>;
};

export type AllSanitySchemaTypes =
  | SanityImagePaletteSwatch
  | SanityImagePalette
  | SanityImageDimensions
  | SanityImageHotspot
  | SanityImageCrop
  | SanityFileAsset
  | SanityImageAsset
  | SanityImageMetadata
  | Geopoint
  | Slug
  | SanityAssetSourceData
  | Student_coordinators
  | Finance
  | Cgc
  | BuildingAndWorks
  | ProgramsType
  | ProgramCards
  | MainCarouselImage
  | Gallery
  | Event
  | ContactData
  | Contact
  | ContactCategory
  | AnnualReport
  | Tender
  | Nirf
  | Club
  | Issues
  | Team
  | FacultyAdvisor
  | Member
  | Job
  | Credit
  | DsaiDetail
  | EceDetail
  | CseDetail
  | About
  | DescriptionStructure
  | SeatStructure
  | LinksStructure
  | Announcement
  | FormerBoardOfGovernor
  | BoardOfGovernor
  | Visitor
  | FormerDirector
  | ChairPerson
  | Staff
  | Senate
  | Faculty
  | KrcDataTelFull
  | KrcDataTel
  | KrcData
  | Facility
  | CampusData
  | Research_advertisement
  | ResearchProfiles;
export declare const internalGroqTypeReferenceTo: unique symbol;
// Source: ./src/sanity/lib/queries.ts
// Variable: GetFacultyDetails
// Query: *[_type == "faculty" && facultyId == $id] {    "id": facultyId,    "photo": content.card.photo,    content  }
export type GetFacultyDetailsResult = Array<{
  id: string | null;
  photo: string | null;
  content: {
    head?: {
      name?: string;
      profile_pdf?: string;
    };
    card?: {
      photo?: string;
      PhD?: string;
      designation?: string;
      department?: string;
      mail_id?: string;
      cabin_number?: string;
      position?: Array<string>;
    };
    body?: {
      profile_text?: string;
      interest_areas?: Array<string>;
    };
  } | null;
}>;
// Variable: GetAllFaculties
// Query: *[_type == "faculty"] {    "id": facultyId  }
export type GetAllFacultiesResult = Array<{
  id: string | null;
}>;

// Query TypeMap
import '@sanity/client';
declare module '@sanity/client' {
  interface SanityQueries {
    '*[_type == "faculty" && facultyId == $id] {\n    "id": facultyId,\n    "photo": content.card.photo,\n    content\n  }': GetFacultyDetailsResult;
    '*[_type == "faculty"] {\n    "id": facultyId\n  }': GetAllFacultiesResult;
  }
}
